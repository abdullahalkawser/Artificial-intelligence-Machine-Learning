# loc ‡¶ï‡ßÄ?

# English:
# loc is used to access and modify data in Pandas DataFrame by label/index.

# ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü:
# loc ‡¶¶‡¶ø‡ßü‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ DataFrame ‡¶è‡¶∞ ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡¶ø‡¶∑‡ßç‡¶ü row, column ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßá update ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø‡•§

# üîπ Example Dataset
import pandas as pd

data = {
    "ID": [1, 2, 3, 4],
    "Name": ["Anisa", "Kawser", "Rafi", "Sumi"],
    "Score": [85, 90, 75, 88]
}

df = pd.DataFrame(data)
print(df)

# 
# ‚úÖ Output:

#    ID    Name  Score
# 0   1   Anisa     85
# 1   2  Kawser     90
# 2   3    Rafi     75
# 3   4    Sumi     88

# üîπ Updating Data using loc
# 1. Update single value
# Update Rafi's Score ‚Üí 95
df.loc[df["Name"] == "Rafi", "Score"] = 95
print(df)


# ‚úÖ Output:

#    ID    Name  Score
# 0   1   Anisa     85
# 1   2  Kawser     90
# 2   3    Rafi     95
# 3   4    Sumi     88

# 2. Update multiple columns in a row
# Update Sumi's Name and Score
df.loc[df["ID"] == 4, ["Name", "Score"]] = ["Sumaiya", 92]
print(df)


# ‚úÖ Output:

#    ID     Name  Score
# 0   1    Anisa     85
# 1   2   Kawser     90
# 2   3     Rafi     95
# 3   4  Sumaiya     92

# 3. Conditional Update
# Increase all Score by 5 where Score < 90
df.loc[df["Score"] < 90, "Score"] = df["Score"] + 5
print(df)


# üëâ ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶Ø‡¶æ‡¶¶‡ßá‡¶∞ Score 90 ‡¶è‡¶∞ ‡¶®‡¶ø‡¶ö‡ßá, ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∏‡ßç‡¶ï‡ßã‡¶∞ ‡ß´ ‡¶¨‡¶æ‡ßú‡¶¨‡ßá‡•§

# 4. Update entire column
# Add 10 bonus to all Score
df.loc[:, "Score"] = df["Score"] + 10
print(df)

# üîπ Summary (Bangla + English)

# df.loc[row_condition, "Column"] = new_value ‚Üí single update

# df.loc[row_condition, ["Col1", "Col2"]] = [val1, val2] ‚Üí multiple update

# df.loc[:, "Column"] = ... ‚Üí ‡¶™‡ßÅ‡¶∞‡ßã column update

# üëâ ‡¶ö‡¶æ‡¶á‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶ø ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá Practice Tasks ‡¶¨‡¶æ‡¶®‡¶ø‡ßü‡ßá ‡¶¶‡¶ø‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø (‡¶Ø‡ßá‡¶Æ‡¶® "90 ‡¶è‡¶∞ ‡¶®‡¶ø‡¶ö‡ßá ‡¶®‡¶æ‡¶Æ‡¶ï‡ßá 'Failed' set ‡¶ï‡¶∞‡¶æ", "ID odd ‡¶π‡¶≤‡ßá score +3 ‡¶ï‡¶∞‡¶æ") ‚Äî ‡¶è‡¶ó‡ßÅ‡¶≤‡ßã ‡¶ï‡¶∞‡¶≤‡ßá loc ‡¶è‡¶ï‡¶¶‡¶Æ ‡¶Æ‡¶æ‡¶∏‡ßç‡¶ü‡¶æ‡¶∞‡¶ø ‡¶π‡ßü‡ßá ‡¶Ø‡¶æ‡¶¨‡ßá‡•§

# ‡¶ö‡¶æ‡¶ì ‡¶ï‡¶ø ‡¶Ü‡¶Æ‡¶ø ‡¶∏‡ßá‡¶á Practice Task List ‡¶¨‡¶æ‡¶®‡¶ø‡ßü‡ßá ‡¶¶‡¶ø‡¶á?

# You said:
# dew
# ChatGPT said:

# ‡¶†‡¶ø‡¶ï ‡¶Ü‡¶õ‡ßá ‡¶≠‡¶æ‡¶á üòÉ ‡¶è‡¶ñ‡¶® ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø Pandas loc ‡¶¶‡¶ø‡ßü‡ßá Data Update ‡¶ï‡¶∞‡¶æ‡¶∞ Practice Tasks ‡¶¨‡¶æ‡¶®‡¶ø‡ßü‡ßá ‡¶¶‡¶ø‡¶≤‡¶æ‡¶Æ‡•§

# üìù Practice Tasks: Updating Data using loc
# ‚úÖ Task 1: Single Value Update

# ‡¶è‡¶ï‡¶ü‡¶æ DataFrame ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì, ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ID, Name, Score ‡¶•‡¶æ‡¶ï‡¶¨‡ßá‡•§
# üëâ loc ‡¶¶‡¶ø‡ßü‡ßá ‡ß©rd student-‡¶è‡¶∞ Score = 100 ‡¶ï‡¶∞‡ßá ‡¶¶‡¶æ‡¶ì‡•§

# ‚úÖ Task 2: Multiple Column Update

# üëâ ID == 2 ‡¶π‡¶≤‡ßá Name = "Updated" ‡¶Ü‡¶∞ Score = 80 set ‡¶ï‡¶∞‡ßã‡•§

# ‚úÖ Task 3: Conditional Update

# üëâ ‡¶Ø‡¶æ‡¶¶‡ßá‡¶∞ Score < 90, ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ Score + 5 ‡¶ï‡¶∞‡ßã‡•§

# ‚úÖ Task 4: Update Based on Multiple Conditions

# üëâ ‡¶Ø‡¶æ‡¶¶‡ßá‡¶∞ Score > 95 AND Name starts with "A", ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ Score = 99 ‡¶ï‡¶∞‡ßá ‡¶¶‡¶æ‡¶ì‡•§

# ‚úÖ Task 5: Update Entire Column

# üëâ ‡¶∏‡¶¨ Student ‡¶è‡¶∞ Score-‡¶è 10 bonus ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßã‡•§

# ‚úÖ Task 6: Replace Failed Students

# üëâ ‡¶Ø‡¶æ‡¶¶‡ßá‡¶∞ Score < 60, ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ Name column-‡¶è "Failed" ‡¶≤‡¶ø‡¶ñ‡ßá ‡¶¶‡¶æ‡¶ì‡•§

# ‚úÖ Task 7: Bulk Update with loc

# üëâ ID odd ‡¶π‡¶≤‡ßá Score + 3, ‡¶Ü‡¶∞ ID even ‡¶π‡¶≤‡ßá Score + 7 ‡¶ï‡¶∞‡ßá ‡¶¶‡¶æ‡¶ì‡•§

# üîπ Example Starter Code


import pandas as pd

data = {
    "ID": [1, 2, 3, 4, 5],
    "Name": ["Anisa", "Kawser", "Rafi", "Sumi", "Nila"],
    "Score": [85, 90, 75, 55, 99]
}

df = pd.DataFrame(data)
print("Original DataFrame:\n", df)

# üëâ ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ Practice Task ‡¶ó‡ßÅ‡¶≤‡ßã



