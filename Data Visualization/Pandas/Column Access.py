import pandas as pd

data = {
    "Name": ["Anis", "Rahim", "Karim"],
    "Age": [23, 25, 21],
    "CGPA": [3.5, 3.8, 3.2]
}

df = pd.DataFrame(data) # Create DataFrame without custom index

# Single column
print(df["Name"])

# Multiple columns
print(df[["Name", "CGPA"]])








    # 2. Shorthand Access (Attribute style)

    # ‚úÖ Example:

print(df.Age)


    # English: Columns can also be accessed like an attribute: df.Age.

    # ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ: Column ‡¶®‡¶æ‡¶Æ attribute-‡¶è‡¶∞ ‡¶Æ‡¶§ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü ‚Üí df.Age‡•§






# Column Access ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶¨‡¶ø‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶â‡¶™‡¶æ‡¶Ø‡¶º ‚Äî (Normal, Shorthand, Dot Notation)‡•§ ‡¶Ü‡¶Æ‡¶ø ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ + English ‡¶è Example ‡¶∏‡¶π ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ö‡ßç‡¶õ‡¶ø‡•§

# üìò Accessing Columns in Pandas
# 1. Normal Access (Dictionary style)

# English: Use column name inside square brackets [].

# ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ: Column-‡¶è‡¶∞ ‡¶®‡¶æ‡¶Æ dictionary key ‡¶è‡¶∞ ‡¶Æ‡¶§ ‡¶ï‡¶∞‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡ßü‡•§


# 3. Dot Notation (Shortcut for Shorthand)

# English: Same as shorthand, often called "dot notation".

# ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ: Shorthand style-‡¶ï‡ßá ‡¶Ö‡¶®‡ßá‡¶ï‡¶∏‡¶Æ‡ßü Dot Notation ‡¶¨‡¶≤‡¶æ ‡¶π‡ßü, ‡¶Ø‡ßá‡¶Æ‡¶® df.Name, df.Age‡•§

# ‚úÖ Example:

print(df.CGPA)


# Output:

# 0    3.5
# 1    3.8
# 2    3.2
# Name: CGPA, dtype: float64

# üìù Notes

# Normal access (df["col"]) ‚Üí Safe, always works.

# Shorthand (df.col) ‚Üí Faster, but only works if column name is valid.

# Dot notation = shorthand access style.

# üëâ ‡¶è‡¶ñ‡¶® ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶õ‡ßá ‡¶§‡¶ø‡¶®‡¶ü‡¶æ technique ‡¶π‡¶≤‡ßã:

# df["Name"] ‚Üí Dictionary style (‡¶∏‡¶¨‡¶ö‡ßá‡ßü‡ßá recommended ‚úÖ)

# df[["Name","Age"]] ‚Üí ‡¶è‡¶ï‡¶∏‡¶æ‡¶•‡ßá ‡¶è‡¶ï‡¶æ‡¶ß‡¶ø‡¶ï column

# df.Name / df.Age ‚Üí Shorthand / Dot notation
